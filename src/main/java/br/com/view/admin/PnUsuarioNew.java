/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.view.admin;

import br.com.dao.*;
import br.com.dao.HibernateUtil;
import br.com.model.*;
import br.com.util.UtilGerador;
import java.awt.Color;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Session;

/**
 *
 * @author Felip
 */
public class PnUsuarioNew extends javax.swing.JPanel {

    private Session sessao;
    private Pessoa pessoa;
    private List<Pessoa> pessoas;
    private List<Perfil> perfils;
    private List<Curso> cursos;
    private List<Turma> turmas;

    /**
     * Creates new form PnUsuarioNew
     */
    public PnUsuarioNew() {
        initComponents();
        carregarPerfils();
        carregarUsuarios();
        carregarCursos();
        pnUsuarioAtual.setVisible(false);
    }

    private void carregarUsuarios() {
        try {
            sessao = HibernateUtil.abrirConexao();
            PessoaDao pessoaDao = new PessoaDaoImpl();
            pessoas = null;
            if (cbPerfis.getSelectedIndex() > 0) {
                pessoas = pessoaDao.listarPorPerfil(perfils.get(cbPerfis.getSelectedIndex() - 1), sessao);
            } else {
                pessoas = pessoaDao.listarTodo(sessao);
            }
            preencherUsuarios();
        } catch (HibernateException e) {
            System.out.println(e.getMessage());
        } finally {
            sessao.close();
        }
    }

    private void carregarPerfils() {
        try {
            sessao = HibernateUtil.abrirConexao();
            PerfilDao impl = new PerfilDaoImpl();
            perfils = impl.pesquisarPerfil(sessao);
            preencherPerfils();
        } catch (HibernateException e) {
            System.out.println(e.getMessage());
        } finally {
            sessao.close();
        }
    }

    private void carregarCursos() {
        try {
            sessao = HibernateUtil.abrirConexao();
            CursoDao impl = new CursoDaoImpl();
            cursos = impl.listarTodos(sessao);
            preencherCursos();
        } catch (HibernateException e) {
            System.out.println(e.getMessage());
        } finally {
            sessao.close();
        }
    }

    private void carregarTurmas() {
        try {
            sessao = HibernateUtil.abrirConexao();
            TurmaDao impl = new TurmaDaoImpl();
            turmas = impl.listarPorCurso(cursos.get(cbCurso.getSelectedIndex() - 1), sessao);
            preencherTurmas();
        } catch (HibernateException e) {
            System.out.println(e.getMessage());
        } finally {
            sessao.close();
        }
    }

    private void preencherPerfils() {
        cbPerfis.removeAllItems();
        cbPerfis.addItem("Todos os Perfis");
        perfils.forEach(pe -> {
            cbPerfis.addItem(pe.getFuncao());
            cbPerfil.addItem(pe.getFuncao());
        });
    }

    private void preencherCursos() {
        cbCurso.removeAllItems();
        cbCurso.addItem("Selecionar");
        cursos.forEach(pe -> {
            cbCurso.addItem(pe.getNome());
        });
    }

    private void preencherTurmas() {
        cbTurma.removeAllItems();
        cbTurma.addItem("Selecionar");
        turmas.forEach(pe -> {
            cbTurma.addItem(pe.getNome());
        });
    }

    private void preencherUsuarios() {
        DefaultListModel lista = new DefaultListModel();
        pessoas.forEach(p -> {
            lista.addElement(p.getNome() + " | " + p.getPerfil().getFuncao());
        });

        lsFuncionario.setModel(lista);
    }

    private void preencherCampos() {
        if (!pnUsuarioAtual.isVisible()) {
            pnUsuarioAtual.setVisible(true);
        }

        txNome.setText(pessoa.getNome());
        txCPF.setText(pessoa.getCpf());
        txEmail.setText(pessoa.getEmail());
        txSenha.setText(pessoa.getSenha());
        txMatricula.setText(pessoa.getMatricula());
        if (pessoa.getPerfil() != null && !pessoa.getPerfil().getFuncao().isEmpty()) {
            cbPerfil.setSelectedItem(pessoa.getPerfil().getFuncao());
        } else {
            cbPerfil.setSelectedIndex(0);
        }

        if (pessoa instanceof Aluno) {
            Aluno aluno = (Aluno) pessoa;
            cbCurso.setSelectedIndex(cursos.indexOf(aluno.getTurma().getCurso()) + 1);
            cbTurma.setSelectedIndex(turmas.indexOf(aluno.getTurma()) + 1);
        } else {
            cbCurso.setSelectedIndex(0);
            cbTurma.setSelectedIndex(0);
        }

        isAlterar(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btAddAluno = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsFuncionario = new javax.swing.JList<>();
        pnUsuarioAtual = new javax.swing.JPanel();
        txNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txSenha = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txCPF = new javax.swing.JTextField();
        txMatricula = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btSalvar = new javax.swing.JButton();
        cbPerfil = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        pnAlunoAtributo = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cbCurso = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cbTurma = new javax.swing.JComboBox<>();
        btCancelar = new javax.swing.JButton();
        lbAluno = new javax.swing.JLabel();
        cbPerfis = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        jLabel1.setText("Usuários");

        btAddAluno.setText("Adicionar Novo Usuário");
        btAddAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddAlunoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Filtrar perfil:");

        lsFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lsFuncionarioMousePressed(evt);
            }
        });
        lsFuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lsFuncionarioKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(lsFuncionario);

        pnUsuarioAtual.setBackground(new java.awt.Color(248, 247, 247));

        txNome.setEditable(false);

        jLabel3.setText("* Nome");

        jLabel4.setText("* Email");

        txEmail.setEditable(false);

        jLabel5.setText("* Senha");

        txSenha.setEditable(false);

        jLabel6.setText("* CPF");

        txCPF.setEditable(false);

        txMatricula.setEditable(false);

        jLabel7.setText("Matrícula");

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        cbPerfil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        cbPerfil.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbPerfil.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPerfilItemStateChanged(evt);
            }
        });

        jLabel10.setText("* Perfil");

        pnAlunoAtributo.setBackground(new java.awt.Color(246, 246, 246));

        jLabel8.setText("Curso");

        cbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        cbCurso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCursoItemStateChanged(evt);
            }
        });

        jLabel9.setText("Turma");

        cbTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        cbTurma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbTurmaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnAlunoAtributoLayout = new javax.swing.GroupLayout(pnAlunoAtributo);
        pnAlunoAtributo.setLayout(pnAlunoAtributoLayout);
        pnAlunoAtributoLayout.setHorizontalGroup(
            pnAlunoAtributoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAlunoAtributoLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnAlunoAtributoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(cbCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnAlunoAtributoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTurma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnAlunoAtributoLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnAlunoAtributoLayout.setVerticalGroup(
            pnAlunoAtributoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnAlunoAtributoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnAlunoAtributoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnAlunoAtributoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        lbAluno.setText(" ");

        javax.swing.GroupLayout pnUsuarioAtualLayout = new javax.swing.GroupLayout(pnUsuarioAtual);
        pnUsuarioAtual.setLayout(pnUsuarioAtualLayout);
        pnUsuarioAtualLayout.setHorizontalGroup(
            pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbAluno)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                        .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbPerfil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txNome, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txSenha, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnUsuarioAtualLayout.createSequentialGroup()
                                .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnUsuarioAtualLayout.createSequentialGroup()
                                .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(151, 151, 151))
                                    .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                                        .addComponent(txCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(jLabel7)))
                            .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btCancelar)
                                .addGap(18, 18, 18)
                                .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))))
            .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnAlunoAtributo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        pnUsuarioAtualLayout.setVerticalGroup(
            pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNome, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnUsuarioAtualLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lbAluno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(pnAlunoAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(pnUsuarioAtualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btCancelar))
                .addContainerGap())
        );

        cbPerfis.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPerfisItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Nome | Perfil");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPerfis, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnUsuarioAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(btAddAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAddAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPerfis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addComponent(pnUsuarioAtual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbPerfisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPerfisItemStateChanged
        if (pessoas != null)
            carregarUsuarios();
    }//GEN-LAST:event_cbPerfisItemStateChanged

    private void lsFuncionarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lsFuncionarioMousePressed
        pessoa = pessoas.get(lsFuncionario.getSelectedIndex());
        preencherCampos();
    }//GEN-LAST:event_lsFuncionarioMousePressed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (!btSalvar.getText().equalsIgnoreCase("alterar")) {
            if (validaCampos()) {
                Boolean transacao = false;
                pessoa.setNome(txNome.getText());
                pessoa.setCpf(txCPF.getText());
                pessoa.setEmail(txEmail.getText());
                if (txMatricula.getText().isEmpty()) {
                    pessoa.setMatricula(UtilGerador.gerarNumero(16));
                } else {
                    pessoa.setMatricula(txMatricula.getText());
                }
                pessoa.setSenha(txSenha.getText());
                pessoa.setPerfil(perfils.get(cbPerfil.getSelectedIndex() - 1));

                switch (cbPerfil.getSelectedItem().toString().toLowerCase()) {
                    case "aluno":
                        transacao = salvarAluno();
                        break;
                    case "bibliotecário":
                    case "bibliotecario":
                    case "coordenador":
                        transacao = salvarFuncionario();
                        break;
                }
                if (transacao) {
                    carregarUsuarios();
                    preencherCampos();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Os campos que contém * são obrigatórios.");
            }
        } else {
            isAlterar(true);
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private Boolean salvarAluno() {
        Aluno aluno;
        if (cbTurma.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um curso/turma para o aluno!");
            return false;
        }
        if (pessoa instanceof Aluno) {
            aluno = (Aluno) pessoa;
        } else {
            aluno = new Aluno();
            aluno.setNome(pessoa.getNome());
            aluno.setCpf(pessoa.getCpf());
            aluno.setEmail(pessoa.getEmail());
            aluno.setMatricula(pessoa.getMatricula());
            aluno.setSenha(pessoa.getSenha());
            aluno.setPerfil(pessoa.getPerfil());
        }
        aluno.setTurma(turmas.get(cbTurma.getSelectedIndex() - 1));
        try {
            sessao = HibernateUtil.abrirConexao();
            AlunoDao implAluno = new AlunoDaoImpl();
            implAluno.salvarOuAlterar(aluno, sessao);
            JOptionPane.showMessageDialog(null, "Salvo com sucesso.");
            return true;
        } catch (HibernateException e) {
            String erro = e.getCause().toString();
            if (erro.contains("Duplicate")) {
                JOptionPane.showMessageDialog(null, "E-mail ou Cpf já cadastrado");
            } else {
                JOptionPane.showMessageDialog(null, e.getCause().toString());
            }
            return false;
        } finally {
            sessao.close();
        }
    }

    private Boolean salvarFuncionario() {
        Funcionario funcionario;
        if (pessoa instanceof Funcionario) {
            funcionario = (Funcionario) pessoa;
        } else {
            funcionario = new Funcionario();
            funcionario.setNome(pessoa.getNome());
            funcionario.setCpf(pessoa.getCpf());
            funcionario.setEmail(pessoa.getEmail());
            funcionario.setMatricula(pessoa.getMatricula());
            funcionario.setSenha(pessoa.getSenha());
            funcionario.setPerfil(pessoa.getPerfil());
        }
        try {
            sessao = HibernateUtil.abrirConexao();
            FuncionarioDao implFuncionario = new FuncionarioDaoImpl();
            implFuncionario.salvarOuAlterar(funcionario, sessao);
            JOptionPane.showMessageDialog(null, "Salvo com sucesso.");
            return true;
        } catch (HibernateException e) {
            String erro = e.getCause().toString();
            if (erro.contains("Duplicate")) {
                JOptionPane.showMessageDialog(null, "E-mail ou Cpf já cadastrado");
            } else {
                JOptionPane.showMessageDialog(null, e.getCause().toString());
            }
            return false;
        } finally {
            sessao.close();
        }
    }

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        preencherCampos();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void cbCursoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCursoItemStateChanged
        if (cbCurso.getSelectedIndex() > 0)
            carregarTurmas();
    }//GEN-LAST:event_cbCursoItemStateChanged

    private void cbPerfilItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPerfilItemStateChanged
        pnAlunoAtributo.setVisible(cbPerfil.getSelectedItem().toString().equalsIgnoreCase("aluno"));
    }//GEN-LAST:event_cbPerfilItemStateChanged

    private void lsFuncionarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lsFuncionarioKeyReleased
        pessoa = pessoas.get(lsFuncionario.getSelectedIndex());
        preencherCampos();
    }//GEN-LAST:event_lsFuncionarioKeyReleased

    private void btAddAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddAlunoActionPerformed
        pessoa = new Pessoa();
        preencherCampos();
        isAlterar(true);

    }//GEN-LAST:event_btAddAlunoActionPerformed

    private void cbTurmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbTurmaMouseClicked
        if (cbPerfil.getSelectedItem().toString().equalsIgnoreCase("aluno") && cbCurso.getSelectedIndex() == 0)
            JOptionPane.showMessageDialog(null, "Selecione um curso!");
    }//GEN-LAST:event_cbTurmaMouseClicked

    private void isAlterar(Boolean alterar) {
        if (alterar) {
            txNome.setEditable(true);
            txCPF.setEditable(true);
            txEmail.setEditable(true);
            txSenha.setEditable(true);
            cbCurso.setEditable(true);
            cbTurma.setEditable(true);
            cbCurso.setEnabled(true);
            cbPerfil.setEnabled(true);
            cbTurma.setEnabled(true);
            txNome.setBackground(Color.WHITE);
            txCPF.setBackground(Color.WHITE);
            txEmail.setBackground(Color.WHITE);
            txMatricula.setBackground(Color.WHITE);
            txSenha.setBackground(Color.WHITE);
            btSalvar.setText("Salvar");
            btCancelar.setVisible(true);
        } else {
            txNome.setBackground(Color.LIGHT_GRAY);
            txNome.setEditable(false);
            txCPF.setBackground(Color.LIGHT_GRAY);
            txCPF.setEditable(false);
            txEmail.setBackground(Color.LIGHT_GRAY);
            txEmail.setEditable(false);
            txMatricula.setBackground(Color.LIGHT_GRAY);
            txMatricula.setEditable(false);
            txSenha.setBackground(Color.LIGHT_GRAY);
            txSenha.setEditable(false);
            cbCurso.setEnabled(false);
            cbPerfil.setEnabled(false);
            cbTurma.setEnabled(false);
            btSalvar.setText("Alterar");
            btCancelar.setVisible(false);
        }
    }

    private boolean validaCampos() {
        if (!txEmail.getText().contains("@")
                || txNome.getText().isEmpty()
                || txSenha.getText().isEmpty()
                || txCPF.getText().isEmpty()
                || cbPerfil.getSelectedIndex() == 0) {
            return false;
        } else {
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddAluno;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> cbCurso;
    private javax.swing.JComboBox<String> cbPerfil;
    private javax.swing.JComboBox<String> cbPerfis;
    private javax.swing.JComboBox<String> cbTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbAluno;
    private javax.swing.JList<String> lsFuncionario;
    private javax.swing.JPanel pnAlunoAtributo;
    private javax.swing.JPanel pnUsuarioAtual;
    private javax.swing.JTextField txCPF;
    private javax.swing.JTextField txEmail;
    private javax.swing.JTextField txMatricula;
    private javax.swing.JTextField txNome;
    private javax.swing.JTextField txSenha;
    // End of variables declaration//GEN-END:variables
}
